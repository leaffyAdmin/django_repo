services:
  # Redis Service
  redis:
    image: redis:7-alpine
    container_name: django_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - django_network

  # Django Web Application (Development)
  web:
    build: .
    container_name: django_web_dev
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=core.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CELERY_TASK_ALWAYS_EAGER=False
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - django_network

  # Celery Worker (Development)
  celery_worker:
    build: .
    container_name: django_celery_worker_dev
    command: celery -A core worker -l debug
    volumes:
      - .:/app
    environment:
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=core.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CELERY_TASK_ALWAYS_EAGER=False
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
    depends_on:
      redis:
        condition: service_healthy
      web:
        condition: service_started
    networks:
      - django_network

  # Celery Beat (Development)
  celery_beat:
    build: .
    container_name: django_celery_beat_dev
    command: celery -A core beat -l debug
    volumes:
      - .:/app
    environment:
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=core.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CELERY_TASK_ALWAYS_EAGER=False
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
    depends_on:
      redis:
        condition: service_healthy
      web:
        condition: service_started
    networks:
      - django_network

  # Flower (Celery Monitoring)
  # flower:
  #   build: .
  #   container_name: django_flower_dev
  #   command: celery -A core flower --port=5555
  #   ports:
  #     - "5555:5555"
  #   environment:
  #     - DEBUG=True
  #     - DJANGO_SETTINGS_MODULE=core.settings
  #     - CELERY_BROKER_URL=redis://redis:6379/0
  #     - CELERY_RESULT_BACKEND=redis://redis:6379/0
  #     - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
  #   depends_on:
  #     redis:
  #       condition: service_healthy
  #     celery_worker:
  #       condition: service_started
  #   networks:
  #     - django_network

  # Django Debug Toolbar (Development)
  # debug_toolbar:
  #   build: .
  #   container_name: django_debug_toolbar_dev
  #   command: python manage.py shell
  #   volumes:
  #     - .:/app
  #   environment:
  #     - DEBUG=True
  #     - DJANGO_SETTINGS_MODULE=core.settings
  #     - CELERY_BROKER_URL=redis://redis:6379/0
  #     - CELERY_RESULT_BACKEND=redis://redis:6379/0
  #     - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
  #   depends_on:
  #     redis:
  #       condition: service_healthy
  #     web:
  #       condition: service_healthy
  #   networks:
  #     - django_network

volumes:
  redis_data:
  static_volume:
  media_volume:

networks:
  django_network:
    driver: bridge 