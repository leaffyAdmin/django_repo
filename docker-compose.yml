version: '3.8'

services:
  # Redis Service
  redis:
    image: redis:7-alpine
    container_name: django_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - django_network

  # PostgreSQL Database (optional, can use SQLite for development)
  postgres:
    image: postgres:15-alpine
    container_name: django_postgres
    environment:
      POSTGRES_DB: django_health_celery
      POSTGRES_USER: django_user
      POSTGRES_PASSWORD: django_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - django_network

  # Django Web Application
  web:
    build: .
    container_name: django_web
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=core.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgresql://django_user:django_password@postgres:5432/django_health_celery
    networks:
      - django_network

  microservice:
    build: Dockerfile_microservice
    container_name: django_microservice
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=core.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgresql://django_user:django_password@postgres:5432/django_health_celery
    networks:
      - django_network
  # Celery Worker
  celery_worker:
    build: .
    container_name: django_celery_worker
    command: celery -A core worker -l info
    volumes:
      - .:/app
    environment:
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=core.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgresql://django_user:django_password@postgres:5432/django_health_celery
    networks:
      - django_network

  # Celery Beat (Scheduler)
  celery_beat:
    build: .
    container_name: django_celery_beat
    command: celery -A core beat -l info
    volumes:
      - .:/app
    environment:
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=core.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgresql://django_user:django_password@postgres:5432/django_health_celery
    networks:
      - django_network

  # Flower (Celery Monitoring)
  flower:
    build: .
    container_name: django_flower
    command: celery -A core flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=core.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgresql://django_user:django_password@postgres:5432/django_health_celery
    networks:
      - django_network

  # Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: django_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/static
      - media_volume:/app/media
    networks:
      - django_network

networks:
  django_network:
    driver: bridge 