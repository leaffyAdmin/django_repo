[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "django-health-celery-app"
dynamic = ["version"]
description = "Django application with health check API and Celery integration"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"},
]
keywords = ["django", "celery", "health", "api", "monitoring"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "Django>=4.2.0,<5.1.0",
    "celery>=5.3.0,<6.0.0",
    "django-celery-beat>=2.5.0,<3.0.0",
    "redis>=4.5.0,<5.0.0",
    "kombu>=5.3.0,<6.0.0",
    "billiard>=4.1.0,<5.0.0",
    "djangorestframework>=3.14.0,<4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0,<8.0.0",
    "pytest-django>=4.5.0,<5.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "black>=23.7.0,<24.0.0",
    "flake8>=6.0.0,<7.0.0",
    "isort>=5.12.0,<6.0.0",
    "ipython>=8.14.0,<9.0.0",
    "django-debug-toolbar>=4.2.0,<5.0.0",
    "flower>=2.0.0,<3.0.0",
]
minimal = [
    "Django>=4.2.0,<5.1.0",
    "celery>=5.3.0,<6.0.0",
    "django-celery-beat>=2.5.0,<3.0.0",
    "redis>=4.5.0,<5.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/django-health-celery-app"
Documentation = "https://github.com/yourusername/django-health-celery-app#readme"
Repository = "https://github.com/yourusername/django-health-celery-app"
"Bug Tracker" = "https://github.com/yourusername/django-health-celery-app/issues"

[project.scripts]
django-health-celery = "core.management:main"

[tool.setuptools_scm]
write_to = "core/_version.py"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_django = "django"
known_first_party = ["core", "apps"]
sections = ["FUTURE", "STDLIB", "DJANGO", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "core.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=apps",
    "--cov=core",
    "--cov-report=term-missing",
    "--cov-report=html",
]
testpaths = ["apps", "core"]

[tool.coverage.run]
source = ["apps", "core"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/settings/*",
    "*/wsgi.py",
    "*/asgi.py",
    "*/manage.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    "venv",
    "env",
    ".env",
]

[tool.bandit]
exclude_dirs = ["tests", "test", "migrations"]
skips = ["B101", "B601"] 